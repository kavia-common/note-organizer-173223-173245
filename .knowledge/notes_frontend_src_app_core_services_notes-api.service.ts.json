{"is_source_file": true, "format": "TypeScript", "description": "This file defines the NotesApiService class for managing notes, folders, and tags. It acts as an in-memory store with localStorage persistence, providing CRUD operations and filtering capabilities for note management within an Angular application.", "external_files": ["../models/note.model", "../models/folder.model", "../models/tag.model"], "external_methods": ["map"], "published": ["NotesApiService"], "classes": [{"name": "NotesApiService", "description": "Service class providing methods to manage notes, folders, and tags with in-memory persistence."}], "methods": [{"name": "listNotes(query?: NoteQuery): Observable<Note[]> { listNotes", "description": "Returns an observable of notes, filtered by optional search query, tag, or folder.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "getNote(id: string): Observable<Note | undefined> { getNote", "description": "Retrieves a single note by its ID.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "createNote(partial: Pick<Note, 'title' | 'content' | 'folderId' | 'tagIds'>): Observable<Note>/ createNote", "description": "Creates a new note with provided partial data and returns it.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "updateNote(updated: Note): Observable<Note> { updateNote", "description": "Updates an existing note and returns the updated note.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "deleteNote(id: string): Observable<void> { deleteNote", "description": "Deletes a note by its ID.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "listFolders(): Observable<Folder[]> { listFolders", "description": "Lists all available folders.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "listTags(): Observable<Tag[]> { listTags", "description": "Lists all tags.", "scope": "NotesApiService", "scopeKind": "class"}, {"name": "private nextState(mutator: (s: { notes: Note[]; folders: Folder[]; tags: Tag[] }) => void) { nextState", "scope": "NotesApiService", "scopeKind": "class", "description": "unavailable"}, {"name": "private persist(state: { notes: Note[]; folders: Folder[]; tags: Tag[] }) { persist", "scope": "NotesApiService", "scopeKind": "class", "description": "unavailable"}, {"name": "}>(this.loadInitial()); this", "scope": "NotesApiService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.state$.pipe", "this.persist", "this.nextState", "map", "this.loadInitial"], "search-terms": ["NotesApiService", "localStorage persistence", "Angular service", "Notes management", "Folder and Tag support", "Observable CRUD"], "state": 2, "file_id": 24, "knowledge_revision": 101, "git_revision": "", "revision_history": [{"53": ""}, {"100": ""}, {"101": ""}], "ctags": [{"_type": "tag", "name": "NotesApiService", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^export class NotesApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  private readonly STORAGE_KEY = 'notes_app_store_v1';$/", "language": "TypeScript", "kind": "property", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "copy", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^    const copy = JSON.parse(JSON.stringify(this.state$.value));$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.nextState", "scopeKind": "method"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  createNote(partial: Pick<Note, 'title' | 'content' | 'folderId' | 'tagIds'>): Observable<Note>/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^      createdAt: now,$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  deleteNote(id: string): Observable<void> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^    const g: any = typeof globalThis !== 'undefined' ? (globalThis as any) : {};$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  getNote(id: string): Observable<Note | undefined> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^      const idx = s.notes.findIndex(n => n.id === note.id);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.updateNote", "scopeKind": "method"}, {"_type": "tag", "name": "listFolders", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  listFolders(): Observable<Folder[]> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  listNotes(query?: NoteQuery): Observable<Note[]> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "listTags", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  listTags(): Observable<Tag[]> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^      const ls: any = (typeof globalThis !== 'undefined' && (globalThis as any).localStorage) ? /", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.persist", "scopeKind": "method"}, {"_type": "tag", "name": "newId", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^    const newId: string = g.crypto && typeof g.crypto.randomUUID === 'function'$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "nextState", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  private nextState(mutator: (s: { notes: Note[]; folders: Folder[]; tags: Tag[] }) => void) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^    const note = { ...updated, updatedAt: new Date().toISOString() };$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.updateNote", "scopeKind": "method"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^    const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "null", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^      folderId: partial.folderId ?? null,$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "persist", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  private persist(state: { notes: Note[]; folders: Folder[]; tags: Tag[] }) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^          const q = query.search.toLowerCase();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.listNotes", "scopeKind": "method"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^          const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "state$", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  private state$ = new BehaviorSubject<{$/", "language": "TypeScript", "kind": "property", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "tagIds", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^      tagIds: partial.tagIds ?? [],$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "this", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  }>(this.loadInitial());$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^      title: partial.title || 'Untitled',$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^  updateNote(updated: Note): Observable<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesApiService", "scopeKind": "class"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^      updatedAt: now$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.createNote", "scopeKind": "method"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/note-organizer-173223-173245/notes_frontend/src/app/core/services/notes-api.service.ts", "pattern": "/^    const note = { ...updated, updatedAt: new Date().toISOString() };$/", "language": "TypeScript", "kind": "constant", "scope": "NotesApiService.updateNote", "scopeKind": "method"}], "hash": "4bce5afe0d3ec3d4f725bccff0eb9a5d", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/core/services/notes-api.service.ts", "fields": [{"name": "private readonly STORAGE_KEY = 'notes_app_store_v1';", "scope": "NotesApiService", "scopeKind": "class", "description": "unavailable"}, {"name": "private state$ = new BehaviorSubject<{", "scope": "NotesApiService", "scopeKind": "class", "description": "unavailable"}]}